export type Vector<T> = T[];
export declare const v2zero: () => Vector<number>;
export declare const v3zero: () => Vector<number>;
export declare const vmap: <T, U, V>(f: (t: T, u: U) => V) => (ts: Vector<T>) => (us: Vector<U>) => V[];
export declare const vadd: (ts: Vector<number>) => (us: Vector<number>) => number[];
export declare const vsub: (ts: Vector<number>) => (us: Vector<number>) => number[];
export declare const vmul: (ts: Vector<number>) => (us: Vector<number>) => number[];
export declare const vdiv: (ts: Vector<number>) => (us: Vector<number>) => number[];
export declare const vsquare: (v: Vector<number>) => number[];
export declare const vsum: (v: Vector<number>) => number;
export declare const vproduct: (v: Vector<number>) => number;
